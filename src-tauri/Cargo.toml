[package]
name = "imagio"
version = "1.0.0"
description = "OCR application built with Tauri"
authors = ["you"]
license = "MIT"
repository = ""
edition = "2021"
rust-version = "1.77.2"

# Enable sccache for faster builds
[profile.dev]
incremental = true
# Enable partial optimization for dev mode to improve image processing performance
# opt-level = 1: Lightweight optimization, fast compilation speed, but significant performance improvement
opt-level = 1

[profile.release]
incremental = true
# Full optimization for release mode
opt-level = 3  # Using 3 instead of 2 provides better performance
# Use thin LTO instead of full LTO, compilation speed improves 2-3x, performance loss < 5%
lto = "thin"
# Increase codegen units to speed up compilation (16 is the default)
codegen-units = 16

# Optional: If opt-level=1 is still too slow, try opt-level=2
# This provides near-release performance but with slightly longer compilation time
# Usage: CARGO_PROFILE_DEV_OPT_LEVEL=2 pnpm run tauri:dev
# Or uncomment the following:
# [profile.dev]
# opt-level = 2

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[lib]
name = "app_lib"
crate-type = ["staticlib", "cdylib", "rlib"]

[build-dependencies]
tauri-build = { version = "2.4.1", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
log = "0.4"
tauri = { version = "2.8.5", features = ["protocol-asset"] }
tauri-plugin-log = "2"
tauri-plugin-dialog = "2.0"
tauri-plugin-fs = "2.0"
tauri-plugin-http = "2"
tauri-plugin-clipboard-manager = "2"
arboard = "3.6"
tesseract = "0.15"
dirs = "5.0"
image = { version = "0.25", features = ["png", "jpeg", "gif", "bmp", "tiff", "webp"] }
imageproc = "0.25"
